// <auto-generated />
using System;
using BodyMeasurementsTracker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BodyMeasurementsTracker.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241218171620_AddUserIdToBodyMeasurements")]
    partial class AddUserIdToBodyMeasurements
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BodyMeasurementsTracker.Models.BodyMeasurement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<float?>("Abdomen")
                        .HasColumnType("real");

                    b.Property<float?>("Biceps")
                        .HasColumnType("real");

                    b.Property<float?>("BodyFat")
                        .HasColumnType("real");

                    b.Property<float?>("Calf")
                        .HasColumnType("real");

                    b.Property<float?>("Chest")
                        .HasColumnType("real");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<float?>("Forearm")
                        .HasColumnType("real");

                    b.Property<float?>("Hips")
                        .HasColumnType("real");

                    b.Property<float?>("Neck")
                        .HasColumnType("real");

                    b.Property<string>("ProgressPicture")
                        .HasColumnType("text");

                    b.Property<float?>("Shoulder")
                        .HasColumnType("real");

                    b.Property<float?>("Thighs")
                        .HasColumnType("real");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<float?>("Waist")
                        .HasColumnType("real");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("BodyMeasurements");
                });

            modelBuilder.Entity("BodyMeasurementsTracker.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BodyMeasurementsTracker.Models.BodyMeasurement", b =>
                {
                    b.HasOne("BodyMeasurementsTracker.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
